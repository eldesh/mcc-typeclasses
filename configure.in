dnl $Id: configure.in 3149 2014-02-12 17:57:26Z wlux $
dnl
dnl Copyright (c) 2002-2013, Wolfgang Lux
dnl See LICENSE for the full license.
dnl

AC_INIT([curry],[0.9.12-dev+typeclasses],[wlux@uni-muenster.de])
AC_PREREQ(2.52)
AC_CONFIG_SRCDIR(runtime/curry.nw)
AC_CONFIG_HEADERS(runtime/config.h, [touch runtime/.config.h.stamp])


dnl Check for system type
AC_CANONICAL_TARGET


dnl Checks for programs
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_INSTALL
INSTALL_DIR='${INSTALL: -c=} -d -m 755'


dnl Check configuration options
AC_ARG_ENABLE(trampoline,
 [  --enable-trampoline     use trampoline code to implement tail calls])
AC_ARG_ENABLE(cheney,
 [  --enable-cheney=N       use Cheney on the M.T.A. technique with stack size N
                          (default: 32k bytes)])
cheney_default_stack_size=32*1024

case $enable_trampoline in
  yes ) ;;
  no )
    case $enable_cheney in
      "" | no ) conflict=;;
      yes ) conflict=--enable-cheney;;
      * ) conflict=--enable-cheney=$enable_cheney;;
    esac
    if test -n "$conflict"; then
      AC_MSG_ERROR([Conflicting options specified:
--disable-trampoline and $conflict are mutually exclusive])
    fi;;
  "" )
    case $enable_cheney in
      "" | no )
    	# enable trampoline when Gnu C is not used and on systems which use
    	# position independent code
    	if test "$GCC" != "yes"; then
    	  enable_trampoline=yes
    	else
    	  case $target_os in
    	    darwin* ) enable_trampoline=yes;;
    	    * ) enable_trampoline=no;;
    	  esac
    	fi;;
      * ) enable_trampoline=yes;;
    esac;;
  * )
    AC_MSG_ERROR([invalid argument for --enable-trampoline: $enable_trampoline]);;
esac
if test "$enable_trampoline" = yes; then
  AC_DEFINE(USE_TRAMPOLINE)
fi

case $enable_cheney in
  yes ) enable_cheney=$cheney_default_stack_size;;
  *k ) enable_cheney=`expr "$enable_cheney" : '\(.*\)'k`'*1024';;
  *M ) enable_cheney=`expr "$enable_cheney" : '\(.*\)'k`'*1024*1024';;
  "" )
    if test $enable_trampoline = yes; then
      case $target_cpu in
        i*86 | x86_64 ) enable_cheney=$cheney_default_stack_size;;
        * ) enable_cheney=no;;
      esac
    else
      enable_cheney=no
    fi;;
esac
if test $enable_cheney != no; then
  AC_DEFINE_UNQUOTED(C_STACK_SIZE, $enable_cheney)
fi

AC_ARG_ENABLE(longjmp,
 [  --disable-longjmp       Cheney on the M.T.A. technique returns normally to
                          the trampoline instead of performing a longjmp])
case $enable_longjmp in
  no ) AC_DEFINE(USE_RETURN);;
esac

AC_ARG_ENABLE(pointer-tags,
 [  --disable-pointer-tags  do not use tagged pointer representation for
                          characters and (small) integer numbers])
case $enable_pointer_tags in
   no ) AC_DEFINE(NO_POINTER_TAGS);;
esac

AC_ARG_ENABLE(copying,
 [  --enable-copying        enable a purely copying implementation for
                          non-deterministic search])
case $enable_copying in
  yes ) AC_DEFINE(COPY_SEARCH_SPACE);;
esac

AC_ARG_ENABLE(stability,
 [  --disable-stability     perform non-deterministic computation steps even if
                          deterministic computation steps could be executed])
case $enable_stability in
   no ) AC_DEFINE(NO_STABILITY);;
esac

AC_ARG_ENABLE(occurs-check,
 [  --disable-occurs-check  do not perform an occurs-check in (=:=)])
case $enable_occurs_check in
  no ) AC_DEFINE(NO_OCCURS_CHECK);;
esac

AC_ARG_ENABLE(stdlib,
 [  --disable-stdlib        compile only the prelude but not the standard library])
case $enable_stdlib in
  no ) STDLIB=no;;
  *  ) STDLIB=stdlib;;
esac

AC_ARG_ENABLE(debug,
 [  --disable-debug         do not compile any libraries for debugging support])
case $enable_debug in
  no ) DEBUG=no;;
  *  ) DEBUG=debug;;
esac

AC_ARG_ENABLE(cam2c,
 [  --enable-cam2c          build abstract machine code to C compiler])
case $enable_cam2c in
  yes ) CAM2C=cam2c;;
  *   ) CAM2C=;;
esac

AC_ARG_ENABLE(mach,
 [  --enable-mach           build abstract machine interpreter])
case $enable_mach in
  yes ) MACH=mach;;
  *   ) MACH=;;
esac


dnl Check for additional C compiler options
if test "$GCC" = yes; then
  CURRY_C_DYNAMIC_NO_PIC
  CFLAGS="$CFLAGS -Wall"
  CURRY_CFLAGS="$CURRY_CFLAGS -fno-strict-aliasing"
  if test "$enable_trampoline" = no; then
    CURRY_CFLAGS="$CURRY_CFLAGS -fomit-frame-pointer"
  fi
  CFLAGS="$CFLAGS $CURRY_CFLAGS"
fi


dnl Check for a shell which is suitable for cyi
CURRY_CYI_SHELL


dnl Check for Haskell compilers
dnl recognize deprecated --with-hc option but report a warning if it is used
AC_ARG_WITH(hc,[],[HC=$withval; AC_MSG_WARN([Deprecated option --with-hc used
  Use ``configure HC=<haskell compiler>'' instead])])

AC_ARG_VAR(HC,[Haskell compiler command])
AC_ARG_VAR(HFLAGS,[Haskell compiler flags])

if test -n "$HC"; then
  AC_MSG_CHECKING([for $HC])
  AC_MSG_RESULT([$HC])
  CURRY_HC_STD_HASKELL(HC,[],[])
else
  CURRY_PROG_GHC
  if test -z "$HC"; then
    CURRY_PROG_HBC
    if test -z "$HC"; then
      CURRY_PROG_NHC
    fi
  fi
fi
if test -z "$HC"; then
  AC_MSG_ERROR([No Haskell 98 compiler found])
fi

CURRY_HC_VERSION(hc)
case $hc in
  ghc* )
    hc=ghc
    AC_ARG_ENABLE(ghc_make,
      [  --disable-ghc-make      ghc only: Do not use ghc --make])
    case $enable_ghc_make in
      no ) ;;
      *  )
        AC_MSG_CHECKING([whether $HC --make works])
        cat <<eof >conftest.hs
main = return ()
eof
       if $HC --make $HFLAGS -o conftest conftest >&AS_MESSAGE_LOG_FD 2>&1 && test -f conftest; then
          hc=ghc-make
          AC_MSG_RESULT([yes])
        else
          AC_MSG_RESULT([no])
        fi
        rm -rf conftest* a.out
        ;;
    esac
    CURRY_HC_HLIB(HC,
      [HFLAGS="$HFLAGS -ighc"
       IOExts_lhs=ghc/IOExts.lhs],
      [CURRY_GHC_IOEXTS
       IOExts_lhs=])
    case "$HASKELL" in
      hs2010 ) HFLAGS="$HFLAGS -ihs2010"
    esac
    ;;
  hbc* )
    hc=hbc
    IOExts_lhs=hbc/IOExts.lhs
    ;;
  nhc* )
    hc=nhc
    IOExts_lhs=nhc/IOExts.lhs
    ;;
  * ) AC_MSG_ERROR([$HC is not supported]);;
esac

CURRY_HC_PATH_STYLE


dnl Check for Cygpath
if test "$HC_PATH_STYLE" = windows; then
  AC_PATH_PROG(CYGPATH, cygpath)
fi


dnl Check for noweb programs
dnl These must be present if building from the repository, but are not
dnl required for building from a source distribution. We assume building
dnl from a source distribution if config.h.in is present.
AC_CHECK_PROG(TANGLE, notangle, notangle)
AC_CHECK_PROG(WEAVE, noweave, noweave)
AC_CHECK_PROG(CPIF, cpif, cpif)

if test -f $srcdir/config.h.in; then
  if test -z "$TANGLE" || test -z "$CPIF"; then TANGLE=':' CPIF=':'; fi
  if test -z "$WEAVE"; then WEAVE=': \#'; fi
elif test -z "$TANGLE" || test -z "$CPIF" || test -z "$WEAVE"; then
  AC_MSG_ERROR([
Noweb not found.  If not installed on your machine you can
download noweb from http://www.eecs.harvard.edu/~nr/noweb/])
fi


dnl Checks for libraries
AC_SEARCH_LIBS(sin, m)
AC_SEARCH_LIBS(inet_addr, nsl)
AC_SEARCH_LIBS(socket, socket)


dnl Checks for header files
AC_CHECK_HEADERS([stdbool.h])
AC_CHECK_HEADERS([sys/socket.h],[have_sockets_h=yes],[have_sockets_h=no])
AC_CHECK_HEADERS([sys/resource.h])
AC_CHECK_HEADERS([sys/mman.h],[have_sys_mman_h=yes],[have_sys_mman_h=no])
if test $have_sockets_h = no; then
  AC_CHECK_HEADERS([winsock2.h],[have_sockets_h=yes; LIBS="$LIBS -lws2_32"])
  if test $have_sockets_h = no; then
    AC_CHECK_HEADERS([winsock.h],[have_sockets_h=yes; LIBS="$LIBS -lwsock32"])
  fi
fi
AC_CHECK_HEADERS([ieeefp.h])
AC_HEADER_SYS_WAIT


dnl Checks for compiler characteristics
AC_C_CONST
AC_C_VOLATILE
AC_C_INLINE


dnl Checks for target characteristics
CURRY_UNALIGNED_DOUBLE
if test $enable_cheney != no; then
  CURRY_STACK_GROWSUP
fi


dnl Check for typedefs and structures
AC_CHECK_TYPES([_Bool])
AC_CHECK_TYPES([socklen_t],,,[AC_INCLUDES_DEFAULT
#ifdef HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#endif])


dnl Checks for library functions
AC_FUNC_FORK
AC_CHECK_FUNCS([popen])
AC_CHECK_FUNCS([random])
AC_ARG_ENABLE(mprotect,
 [  --disable-mprotect      do not mprotect the inactive semi-space of the heap])
case $have_sys_mman_h in
  yes )
    case $enable_mprotect in
      no ) ;;
      * ) AC_CHECK_FUNCS([mprotect]);;
    esac;;
esac


dnl Check for GNU MP or OpenSSL's libcrypto.
AC_ARG_WITH(gmp,
 [  --with-gmp              use Gnu MP library for multi-precision integer
                          arithmetic (default if available)])
AC_ARG_WITH(libcrypto,
 [  --with-libcrypto        use libcrypto (part of OpenSSL) for multi-precision
                          integer arithmetic (default if gmp is not available)])

have_gmp=no
if test x"$with_gmp" != xno; then
  AC_CHECK_HEADERS([gmp.h], [have_gmp=yes])
fi

have_libcrypto=no
if test $have_gmp = no && test x"$with_libcrypto" != xno; then
  AC_CHECK_HEADERS([openssl/bn.h], [have_libcrypto=yes])
fi

if test $have_gmp = yes; then
  AC_CHECK_LIB(gmp, __gmpz_init, [LIBS="-lgmp $LIBS"], [have_gmp=no])
  if test $have_gmp = no; then
    AC_MSG_ERROR([
Could not find a working libgmp for gmp.h.  Check the
CPPFLAGS and LDFLAGS environment variables, or disable
gmp via --without-gmp if configure has found a bogus
gmp.h.])
  fi
elif test $have_libcrypto = yes; then
  AC_CHECK_LIB(crypto, BN_init, [LIBS="-lcrypto $LIBS"], [have_libcrypto=no])
  if test $have_libcrypto = no; then
    AC_MSG_ERROR([
Could not find a working libcrypto for openssl/bn.h.  Check
the CPPFLAGS and LDFLAGS environment variables, or disable
libcrypto via --without-libcrypto if configure has found a
bogus openssl/bn.h.])
  fi
else
  AC_MSG_ERROR([
Neither the Gnu MP library nor OpenSSL's libcrypto could be
found.  If they are installed in a non-standard location be
sure to invoke configure with the correct settings for
CPPFLAGS and LDFLAGS.  If not installed you can download the
Gnu MP library from http://gmplib.org/])
fi


dnl Generate output files
AC_SUBST(CURRY_CFLAGS)
AC_SUBST(hc)
AC_SUBST(HC)
AC_SUBST(HFLAGS)
AC_SUBST(HASKELL)
AC_SUBST(IOExts_lhs)
AC_SUBST(INSTALL_DIR)
AC_SUBST(STDLIB)
AC_SUBST(DEBUG)
AC_SUBST(CAM2C)
AC_SUBST(MACH)
AC_SUBST(HC_PATH_STYLE)

AC_SUBST_FILE(in_place_config)
in_place_config=$srcdir/in-place-config

AC_CONFIG_COMMANDS_PRE([
$TANGLE -c -L -Rconfig.h.in $srcdir/runtime/curry.nw | $CPIF -ne $srcdir/runtime/config.h.in])

AC_CONFIG_FILES([Makefile], [test -f .depend || touch .depend])
AC_CONFIG_FILES([doc/Makefile])
AC_CONFIG_FILES([runtime/Makefile],
	        [test -f runtime/.depend || touch runtime/.depend])
AC_CONFIG_FILES([curry/Makefile],
		[test -f curry/.depend || touch curry/.depend])
AC_CONFIG_FILES([cyc], [chmod +x cyc])
AC_CONFIG_FILES([cymake], [chmod +x cymake])
AC_CONFIG_FILES([cyi], [chmod +x cyi])
AC_CONFIG_FILES([makedoc], [chmod +x makedoc])

AC_CONFIG_COMMANDS([depend], [${MAKE-make} depend])

AC_OUTPUT
